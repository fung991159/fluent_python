1. "Else" in for, while and try/except
    the same word mean different things:
    1. for loop: else block will run when the for loop was run completely only (i.e. no break)
                 python cookbook author actually against this pattern, though this book is for. I am 
                 indifferent. did find some edge use case
    2. while loop: else block will run when while predicate becomes falsy. 
    3. try/except: this is more common. Else block will run when there is no exception, 
                  but the code isn't something that can raise an exception(the part that belong in try block)
2. Context manager is the "WITH" statment that can change a class state. The book inlucded a pretty good example on 
    sys.stdout
3. @contextlib.contextmanager: standard lib short-cut for building own __enter__, __exit__. when applied
    the code before yield will be run as '__enter__' section, while the one behind is '__exit__'. 
    it is pretty impressive that this can be wrapped into a generator function.
4. Using "With" statment as "subroutine", changing the behaviour of a class when it was in __enter__ state.
